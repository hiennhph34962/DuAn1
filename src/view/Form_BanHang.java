/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package view;

import entity.HoaDon;
import entity.HoaDonChiTiet;
import entity.KhachHang;
import entity.SanPhamBanHang;
import entity.SanPhamChiTiet;
import entity.Voucher;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Objects;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;
import respository.Authu;
import service.HoaDonChiTietService;
import service.HoaDonService;
import service.KhachHangService;
import service.SanPhamBanHangService;
import service.SanPhamChiTietService;
import service.VoucherService;

/**
 *
 * @author Phan Cao
 */
public class Form_BanHang extends javax.swing.JPanel {

    int rowCart = -1;
    int row = -1;
    int rowSP = -1;
    private int check;
    int checkVoucher;
    DefaultTableModel model = new DefaultTableModel();
    SanPhamBanHangService spbhsv = new SanPhamBanHangService();
    HoaDonService hdsv = new HoaDonService();
    HoaDonChiTietService hdctsv = new HoaDonChiTietService();
    SanPhamChiTietService spctsv = new SanPhamChiTietService();
    KhachHangService khsv = new KhachHangService();
    VoucherService vcsv = new VoucherService();

    /**
     * Creates new form content1
     */
    public Form_BanHang() {
        initComponents();
        model = (DefaultTableModel) tblSanPham.getModel();
        LoadDataToTableSanPham();
        fillTableHD();
    }

    private void LoadDataToTableSanPham() {
        model.setRowCount(0);
        //goi phuong thuc getAllSinhVien() cua SinhVienService de lay du lieu
        ArrayList<SanPhamBanHang> lst = spbhsv.getAllSanPham();

        for (SanPhamBanHang bh : lst) {
            model.addRow(new Object[]{
                bh.getMaSpCt(),
                bh.getMaSp(),
                bh.getTenSp(),
                bh.getGia(),
                bh.getSoLuong(),
                bh.getTenSize(),
                bh.getTenMauSac(),
                bh.getTenChatLieu()
            });
        }

    }

    private void fillTableHD() {
        DefaultTableModel model = (DefaultTableModel) tblHoaDonTao.getModel();
        model.setRowCount(0);
        try {
            List<HoaDon> list = hdsv.getAllTrangThaiHaiKh();

            for (int i = 0; i < list.size(); i++) {
                HoaDon hd = list.get(i);
                model.addRow(new Object[]{
                    i + 1,
                    hd.getMaHd(),
                    Authu.user.getTen(),
                    hd.getKh().getTenKh(),
                    hd.loadTrangThaiHD(),
                    hd.getNgayTao()});
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDonTao = new javax.swing.JTable();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        tblGioHang = new javax.swing.JTable();
        suaSoLuongSp = new javax.swing.JButton();
        xoaSP = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblSanPham = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        txtSdtKh = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lblTienThua = new javax.swing.JLabel();
        txtTienKHDua = new javax.swing.JTextField();
        cbbHttt = new javax.swing.JComboBox<>();
        jSeparator2 = new javax.swing.JSeparator();
        btnThanhToan = new javax.swing.JButton();
        btnTaoHoaDon = new javax.swing.JButton();
        btnHuyHoaDon = new javax.swing.JButton();
        lblTongTien = new javax.swing.JLabel();
        txtTienThua = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblTenKh = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        lblTongTienSauGiam = new javax.swing.JLabel();
        txtMaVoucher = new javax.swing.JTextField();
        lblThongTinGiam = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblHoaDonTao.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "STT", "Mã HĐ", "Tên NV", "Tên KH", "Trạng thái", "Ngày tạo"
            }
        ));
        tblHoaDonTao.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonTaoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDonTao);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 720, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Giỏ hàng", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblGioHang.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ma HDCT", "Mã SP", "Tên SP", "Size", "Màu sắc", "Chất liệu", "Giá", "Số lượng", "Thành Tiền"
            }
        ));
        jScrollPane3.setViewportView(tblGioHang);

        suaSoLuongSp.setText("Sửa");
        suaSoLuongSp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                suaSoLuongSpActionPerformed(evt);
            }
        });

        xoaSP.setText("Xóa");
        xoaSP.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                xoaSPActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(suaSoLuongSp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(xoaSP)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(suaSoLuongSp)
                    .addComponent(xoaSP))
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Danh sách sản phẩm", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        tblSanPham.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Ma SPCT", "Mã SP", "Tên SP", "Giá Bán", "Số lượng", "Size", "Màu sắc", "Chất liệu"
            }
        ));
        tblSanPham.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblSanPhamMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tblSanPham);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 8, Short.MAX_VALUE))
        );

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createTitledBorder(""), "Tạo hóa đơn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 14))); // NOI18N

        jLabel2.setText("Số điện thoại:");

        txtSdtKh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtSdtKhActionPerformed(evt);
            }
        });

        jLabel3.setText("Tổng tiền hàng :");

        jLabel5.setText("Hình thức thanh toán :");

        jLabel6.setText("Tiền khách đưa :");

        lblTienThua.setText("Tiền thừa :");

        cbbHttt.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Tiền mặt", "Chuyển khoản" }));

        btnThanhToan.setText("Thanh Toán");
        btnThanhToan.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnThanhToanMouseClicked(evt);
            }
        });
        btnThanhToan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThanhToanActionPerformed(evt);
            }
        });

        btnTaoHoaDon.setText("Tạo hóa đơn");
        btnTaoHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnTaoHoaDonMouseClicked(evt);
            }
        });
        btnTaoHoaDon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTaoHoaDonActionPerformed(evt);
            }
        });

        btnHuyHoaDon.setText("Hủy");
        btnHuyHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnHuyHoaDonMouseClicked(evt);
            }
        });

        lblTongTien.setText("0.0");

        txtTienThua.setText("0.0");

        jLabel7.setText("Giảm:");

        jLabel1.setText("Mã Voucher:");

        jLabel8.setText("Tên KH:");

        jLabel10.setText("Tổng tiền sau giảm:");

        lblTongTienSauGiam.setText("0.0");

        lblThongTinGiam.setText("     ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jSeparator2)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 274, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(36, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addComponent(jSeparator1)
                        .addContainerGap())))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(49, 49, 49)
                        .addComponent(btnHuyHoaDon, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGap(29, 29, 29)
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel3)
                                    .addComponent(lblTienThua)
                                    .addComponent(jLabel10))
                                .addGap(25, 25, 25))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)))
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblTongTien, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtTienThua, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addComponent(txtTienKHDua, javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(lblTongTienSauGiam, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.PREFERRED_SIZE, 143, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(cbbHttt, javax.swing.GroupLayout.Alignment.LEADING, 0, 154, Short.MAX_VALUE))
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addContainerGap())
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addComponent(jLabel7)
                            .addGap(42, 42, 42))
                        .addComponent(jLabel2)
                        .addComponent(jLabel1))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addGap(50, 50, 50)))
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblTenKh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblThongTinGiam)
                            .addComponent(txtSdtKh, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtMaVoucher, javax.swing.GroupLayout.PREFERRED_SIZE, 180, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnHuyHoaDon, btnTaoHoaDon});

        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtSdtKh, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(lblTenKh))
                .addGap(23, 23, 23)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtMaVoucher, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 27, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(lblThongTinGiam))
                .addGap(23, 23, 23)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(lblTongTien))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(lblTongTienSauGiam))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbbHttt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTienKHDua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(31, 31, 31)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblTienThua)
                    .addComponent(txtTienThua))
                .addGap(18, 18, 18)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btnThanhToan, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnTaoHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE)
                    .addComponent(btnHuyHoaDon, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(25, 25, 25))
        );

        jPanel2Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {lblTenKh, txtSdtKh});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
    }// </editor-fold>//GEN-END:initComponents

    private void txtSdtKhActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtSdtKhActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtSdtKhActionPerformed

    private void btnTaoHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnTaoHoaDonMouseClicked
        // TODO add your handling code here:


    }//GEN-LAST:event_btnTaoHoaDonMouseClicked

    public HoaDon getDataBillKhNull() {
        HoaDon hd = new HoaDon();

        Date date = new Date();
        hd.setNgayTao(new java.sql.Date(date.getTime()));

        hd.setMaNv(Authu.user.getMaNv());
        Integer trangThai = 2;//
        hd.setTrangThai(trangThai);
        return hd;

    }

    public KhachHang timSdtTruocKhiTaoHoaDon() {
        String getSdt = txtSdtKh.getText();
        KhachHang khTim = khsv.timKiemKhTheoSdt(getSdt);
        if (khTim.getMaKh() != null) {
            return khTim;
        } else {

            return null;
        }
    }

    public HoaDon getDataBillKhNotNull() {
        HoaDon hd = new HoaDon();

        Date date = new Date();
        hd.setNgayTao(new java.sql.Date(date.getTime()));

        hd.setMaNv(Authu.user.getMaNv());
        hd.setMaKh(timSdtTruocKhiTaoHoaDon().getMaKh());
        Integer trangThai = 2;
        hd.setTrangThai(trangThai);
        return hd;

    }

    private void insertBill() {
        int check = JOptionPane.showConfirmDialog(this, "Bạn muốn tạo hóa đơn mới?", "Xác nhận tạo hóa đơn mới", JOptionPane.YES_NO_OPTION);
        if (check == JOptionPane.NO_OPTION) {
            return;
        }
        
        if (!txtSdtKh.getText().trim().isEmpty()) {
            String getSdt = txtSdtKh.getText();
            KhachHang khTim = khsv.timKiemKhTheoSdt(getSdt);
            if (khTim.getMaKh() == null) {
                JOptionPane.showMessageDialog(this, "Số điện thoại không tồn tại!");
                return;
            }
            lblTenKh.setText(timSdtTruocKhiTaoHoaDon().getTenKh());
            HoaDon hoaDon = getDataBillKhNotNull();
            try {
                hdsv.addHoaDonKhNotNull(hoaDon);
                this.fillTableHD();
                JOptionPane.showMessageDialog(this, "Thêm thành công");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Thêm thành thất bại");
            }
        } else {
            lblTenKh.setText("");
            HoaDon hoaDon = getDataBillKhNull();
            try {
                hdsv.addHoaDonKhNull(hoaDon);
                this.fillTableHD();
                JOptionPane.showMessageDialog(this, "Thêm thành công");
            } catch (Exception e) {
                e.printStackTrace();
                JOptionPane.showMessageDialog(this, "Thêm thành thất bại");
            }
        }
    }


    private void tblHoaDonTaoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonTaoMouseClicked
        // TODO add your handling code here:
        this.row = tblHoaDonTao.getSelectedRow();
        String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
        fillTableGioHang(maHD);
        String getTen = (String) tblHoaDonTao.getValueAt(row, 3);
        lblTenKh.setText(getTen);
        loadTienThua();
        setDataHoaDon();
        loadTienGiam();
        if (txtMaVoucher.getText().isEmpty()) {
            lblThongTinGiam.setText("Voucher trồng!");
        }
    }//GEN-LAST:event_tblHoaDonTaoMouseClicked

    public void setDataHoaDon() {
        this.row = tblHoaDonTao.getSelectedRow();
        String maHD1 = (String) tblHoaDonTao.getValueAt(row, 1);
        HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD1);
        setDataHoaDon(hoaDon);
    }

    private void tblSanPhamMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblSanPhamMouseClicked
        // TODO add your handling code here:
        if (evt.getClickCount() == 1) {

            String input = JOptionPane.showInputDialog(this, "Nhập số lượng:");
            if (input == null || input.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Nhập số lượng cần mua");
                return;
            }
            Integer soLuong = Integer.parseInt(input);
            if (soLuong < 0) {
                JOptionPane.showMessageDialog(this, "Số lượng phải > 0");
                return;
            }

            this.rowSP = tblSanPham.getSelectedRow();
            Integer slsp = (Integer) tblSanPham.getValueAt(rowSP, 4);
            if (soLuong > slsp) {
                JOptionPane.showMessageDialog(this, "Sản phẩm chỉ còn lại " + slsp);
                return;
            }

            //Thêm sp vào giỏ hàng
            Integer soLuongSp = 0;
            this.row = tblHoaDonTao.getSelectedRow();
            if (row < 0) {
                JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để thêm sản phẩm!");
                return;
            }

            HoaDonChiTiet hdctLay = layDuLieuTuBangSanPham(soLuong);
            hdctsv.addHoaDonChiTiet(hdctLay);

            this.row = tblHoaDonTao.getSelectedRow();

            String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
            fillTableGioHang(maHD);

            //update lại số lượng sản phẩm
            SanPhamChiTiet spctUpdate = this.updateSoLuongSP(soLuong);
            this.updateDataProducts(spctUpdate);
            setDataHoaDon();
        }

    }//GEN-LAST:event_tblSanPhamMouseClicked

    private void btnTaoHoaDonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTaoHoaDonActionPerformed
        // TODO add your handling code here:
        insertBill();
    }//GEN-LAST:event_btnTaoHoaDonActionPerformed

    private void xoaSPActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_xoaSPActionPerformed
        // TODO add your handling code here:
        this.rowCart = tblGioHang.getSelectedRow();
        if (rowCart < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm trong giỏ hàng");
            return;
        }
        String maHDCT = (String) tblGioHang.getValueAt(rowCart, 0);
        HoaDonChiTiet hdctBanDau = hdctsv.timKiemTheoMaHD1(maHDCT);
        SanPhamChiTiet spctUpdate = spctsv.timKiemTheoMa(hdctBanDau.getMaSpct());
        SanPhamChiTiet spct = new SanPhamChiTiet();
        try {
            hdctsv.deteleHDCt(maHDCT);
            this.row = tblHoaDonTao.getSelectedRow();
            String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
            HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);
            this.fillTableGioHang(hoaDon.getMaHd());
            Integer slMoi = spctUpdate.getSoLuong() + hdctBanDau.getSoLuong();
            spct.setSoLuong(slMoi);
            String status = "Đang bán";
            Boolean trangThai = status.equals("Đang bán");
            spct.setTrangThai(trangThai);
            spct.setMaSpct(spctUpdate.getMaSpct());
            this.updateDataProducts(spct);
            setDataHoaDon();
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Xóa thất bại!");
        }
    }//GEN-LAST:event_xoaSPActionPerformed

    private void suaSoLuongSpActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_suaSoLuongSpActionPerformed
        // TODO add your handling code here:
        this.rowCart = tblGioHang.getSelectedRow();
        if (rowCart < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một sản phẩm trong giỏ hàng để sửa!");
            return;
        }
        String input = JOptionPane.showInputDialog(this, "Nhập số lượng:");
        if (input == null || input.isEmpty()) {
            return;
        }
        Integer soLuong = Integer.parseInt(input);
        if (soLuong < 0) {
            JOptionPane.showMessageDialog(this, "Số lượng phải > 0");
            return;
        }

        String maHDCT = (String) tblGioHang.getValueAt(rowCart, 0);
        HoaDonChiTiet hdctBanDau = hdctsv.timKiemTheoMaHD1(maHDCT);
        SanPhamChiTiet spctUpdate = spctsv.timKiemTheoMa(hdctBanDau.getMaSpct());
        Integer slspGioHang = (Integer) tblGioHang.getValueAt(rowCart, 7);

        if (soLuong > spctUpdate.getSoLuong()) {
            JOptionPane.showMessageDialog(this, "Sản phẩm chỉ còn lại " + spctUpdate.getSoLuong());
            soLuong = spctUpdate.getSoLuong() + slspGioHang;
        }
        hdctsv.updateTongGia(hdctBanDau, soLuong);
        this.updateCartAndProducr(soLuong);

        this.row = tblHoaDonTao.getSelectedRow();
        String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
        HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);
        this.setDataHoaDon(hoaDon);

    }//GEN-LAST:event_suaSoLuongSpActionPerformed

    private void btnHuyHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnHuyHoaDonMouseClicked
        // TODO add your handling code here:
        Double getTongTien;
        if (lblTongTien.getText().equals("0.0")) {
            getTongTien = 0.0;
        } else {
            getTongTien = Double.parseDouble(lblTongTien.getText());
        }
        this.row = tblHoaDonTao.getSelectedRow();
        if (row < 0) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn cần hủy!");
            return;
        }
        check = JOptionPane.showConfirmDialog(this, "Bạn thực sự muốn hủy hóa đơn ?");
        if (check != JOptionPane.YES_OPTION) {
            return;
        }

        String lyDoHuy = JOptionPane.showInputDialog(this, "Nhập lý do hủy");
        int rowCount = tblGioHang.getRowCount();

        try {
            for (int i = rowCount - 1; i >= 0; i--) {
                String maHDCT = (String) tblGioHang.getValueAt(i, 0);

                // Lấy thông tin sản phẩm trước khi xóa
                HoaDonChiTiet hdctBanDau = hdctsv.timKiemTheoMaHD1(maHDCT);
                SanPhamChiTiet spctUpdate = spctsv.timKiemTheoMa(hdctBanDau.getMaSpct());

                // Xóa sản phẩm trong giỏ hàng
                hdctsv.deteleHDCt(maHDCT);

                // Cập nhật lại bảng giỏ hàng
                String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
                HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);
                this.fillTableGioHang(hoaDon.getMaHd());

                // Cập nhật lại số lượng sản phẩm
                SanPhamChiTiet spct = new SanPhamChiTiet();
                Integer slMoi = spctUpdate.getSoLuong() + hdctBanDau.getSoLuong();
                spct.setSoLuong(slMoi);

                String tt = "Đang bán";
                Boolean trangThai = tt.equals("Đang bán");
                spct.setTrangThai(trangThai);
                spct.setMaSpct(spctUpdate.getMaSpct());

                this.updateDataProducts(spct);
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Xóa thất bại!");
        }

        //đổi trạng thái đã hủy
        HoaDon hd = new HoaDon();

        this.row = tblHoaDonTao.getSelectedRow();
        String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
        HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);

        hd.setTongTien(getTongTien);
        hd.setMaHd(hoaDon.getMaHd());
        Integer trangThai = 3;
        hd.setTrangThai(trangThai);
        hd.setLyDoHuy(lyDoHuy);

        try {
            hdsv.updateHoaDonHuy(hd);
            fillTableHD();
            JOptionPane.showMessageDialog(this, "Đổi trạng thái hóa đơn thanh cong!");
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Đổi trạng thái hóa đơn thất bại!");
        }
    }//GEN-LAST:event_btnHuyHoaDonMouseClicked

    public HoaDon hoaDonThanhToan() {
        HoaDon hd = new HoaDon();
        String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn một hóa đơn!");
            return null;
        } else {
            double tongTien = Double.parseDouble(lblTongTien.getText());
            hd.setMaHd(maHD);
            hd.setTongTien(tongTien);
            hd.setTrangThai(1);
            if (checkVoucher == 1) {
                hd.setMaVc(txtMaVoucher.getText());
            }else{
                hd.setMaVc(null);
            }
            return hd;
        }

    }

    private void btnThanhToanMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnThanhToanMouseClicked
        // TODO add your handling code here:

    }//GEN-LAST:event_btnThanhToanMouseClicked

    public Integer demSanPhamGioHang() {
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        if (model.getRowCount() == 0) {
            return 1;
        } else {
            return 2;
        }
    }

    private void btnThanhToanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThanhToanActionPerformed
        // TODO add your handling code here:

        if (demSanPhamGioHang() == 1) {
            JOptionPane.showMessageDialog(this, "Hóa đơn này không có sản phẩm nào!");
            return;
        }

        if (txtTienKHDua.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Chưa nhập số tiền khách hàng đưa!");
            return;
        }

        Double tienDua = Double.parseDouble(txtTienKHDua.getText());
        Double tongTien;
        if (checkVoucher==1) {
            tongTien = Double.parseDouble(lblTongTienSauGiam.getText());
        }else{
            tongTien = Double.parseDouble(lblTongTien.getText());
        }
        if (tienDua < tongTien) {
            JOptionPane.showMessageDialog(this, "Khách chưa đưa đủ tiền!");
            return;
        } else if (hoaDonThanhToan() != null) {
            hdsv.updateHoaDon(hoaDonThanhToan());
            JOptionPane.showMessageDialog(this, "Thanh toán thành công");
            xoaFormSauKhiThanhToan();
            xoaDuLieuTableGioHang();
            fillTableHD();
            
        } else {
            JOptionPane.showMessageDialog(this, "Thanh toán thất bại");
        }
    }//GEN-LAST:event_btnThanhToanActionPerformed

    public void xoaFormSauKhiThanhToan() {
        txtSdtKh.setText("");
        lblTenKh.setText("");
        txtMaVoucher.setText("");
        lblThongTinGiam.setText("");
        lblTongTien.setText("");
        lblTongTienSauGiam.setText("");
        txtTienKHDua.setText("");
        lblTienThua.setText("");
    }
    
    private void updateCartAndProducr(Integer newQuantity) {
        HoaDonChiTiet hdct = new HoaDonChiTiet();

        this.rowCart = tblGioHang.getSelectedRow();

        String maHDCT = (String) tblGioHang.getValueAt(rowCart, 0);
        HoaDonChiTiet hdctBanDau = hdctsv.timKiemTheoMaHD1(maHDCT);
        SanPhamChiTiet spctUpdate = spctsv.timKiemTheoMa(hdctBanDau.getMaSpct());

        SanPhamChiTiet spct = new SanPhamChiTiet();
        Integer checkSL = newQuantity;
        try {
            if (newQuantity >= hdctBanDau.getSoLuong()) {
                if (spctUpdate.getSoLuong() == 0) {
                    checkSL = hdctBanDau.getSoLuong();
                }
            } else {
                checkSL = newQuantity;
            }
            hdct.setSoLuong(checkSL);
            hdct.setMaHdct(hdctBanDau.getMaHdct());
            if (newQuantity == 0) {
                hdctsv.deteleHDCt(maHDCT);
            } else {
                hdctsv.updateHoaDonChiTiets(hdct);
            }

            this.row = tblHoaDonTao.getSelectedRow();
            String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
            HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);
            this.fillTableGioHang(hoaDon.getMaHd());

            Integer slThayDoi = checkSL - hdctBanDau.getSoLuong();
            Integer slMoi = spctUpdate.getSoLuong() - slThayDoi;

            String status;
            if (slMoi > 0) {
                status = "Đang bán";
            } else {
                status = "Ngừng bán";
            }

            Boolean trangThai = status.equals("Đang bán");
            spct.setTrangThai(trangThai);
            spct.setSoLuong(slMoi);
            spct.setMaSpct(spctUpdate.getMaSpct());
            this.updateDataProducts(spct);
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Update số lượng cart thất bại!");
        }
    }

    public HoaDonChiTiet layDuLieuTuBangSanPham(Integer soLuong) {
        HoaDonChiTiet hdct = new HoaDonChiTiet();
        this.row = tblSanPham.getSelectedRow();
        String maSPCt = (String) tblSanPham.getValueAt(rowSP, 0);
        SanPhamChiTiet spct = spctsv.timKiemTheoMa(maSPCt);

        this.row = tblHoaDonTao.getSelectedRow();
        String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
        HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);

        Double gia = spct.getGia();
        hdct.setGia(gia);
        hdct.setSoLuong(soLuong);
        hdct.setTongTien(gia * soLuong);
        hdct.setMaSpct(spct.getMaSpct());
        hdct.setMaHD(hoaDon.getMaHd());
        return hdct;
    }

    private void fillTableGioHang(String maHd) {
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        model.setRowCount(0);

        try {
            List<HoaDonChiTiet> list = hdctsv.timKiemTheoMaHD(maHd);
            for (HoaDonChiTiet hdct : list) {
                model.addRow(new Object[]{
                    hdct.getMaHdct(),
                    hdct.getSpct().getSanPham().getMaSp(),
                    hdct.getSpct().getSanPham().getTen(),
                    hdct.getSpct().getSize().getTen(),
                    hdct.getSpct().getMauSac().getTen(),
                    hdct.getSpct().getChatLieu().getTen(),
                    hdct.getGia(),
                    hdct.getSoLuong(),
                    hdct.getTongTien()
                });
            }
        } catch (Exception e) {
            e.printStackTrace();
            JOptionPane.showMessageDialog(this, "Lỗi truy vấn dữ liệu!");
        }
    }

    private void xoaDuLieuTableGioHang() {
        DefaultTableModel model = (DefaultTableModel) tblGioHang.getModel();
        model.setRowCount(0);
    }

    private SanPhamChiTiet updateSoLuongSP(Integer soLuong) {
        SanPhamChiTiet spct = new SanPhamChiTiet();

        this.rowSP = tblSanPham.getSelectedRow(); // Lấy dòng được chọn
        String maSp = (String) tblSanPham.getValueAt(rowSP, 0); // lấy id
        SanPhamChiTiet spctUpdate = spctsv.timKiemTheoMa(maSp);
        //Số lượng còn lại của sp sau khi đã trừ đi
        Integer slMoi = spctUpdate.getSoLuong() - soLuong;

        String status;
        if (slMoi == 0) {
            status = "Ngừng bán";
        } else {
            status = "Đang bán";
        }
        Boolean trangThai = status.equals("Đang bán");
        spct.setTrangThai(trangThai);
        spct.setSoLuong(slMoi);

        spct.setMaSpct(spctUpdate.getMaSpct());

        return spct;
    }

    private void setDataHoaDon(HoaDon hd) {

        this.row = tblHoaDonTao.getSelectedRow();
        String maHD = (String) tblHoaDonTao.getValueAt(row, 1);
        HoaDon hoaDon = hdsv.timKiemTheoMaHd(maHD);
        List<HoaDonChiTiet> list = hdctsv.timKiemTheoMaHD(hoaDon.getMaHd());
        Double tongTien = 0.0;
        for (int i = 0; i < list.size(); i++) {
            double giaTri = list.get(i).getTongTien();
            tongTien += giaTri;
        }
        lblTongTien.setText(String.valueOf(tongTien));
        boolean voucherTonTai = false;
        Double tienGiam = 0.0;

    }

    private void updateDataProducts(SanPhamChiTiet spct) {
        try {
            spctsv.updateSoLuongSanPham(spct);
            LoadDataToTableSanPham();
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    public void fillTienThua() {
        if (checkVoucher == 1) {
            Double tienThua;
            if (txtTienKHDua.getText().trim().isEmpty() || txtTienKHDua == null) {
                txtTienThua.setText("");
                return;
            }
            if (lblTongTienSauGiam.getText().trim().isEmpty() || lblTongTienSauGiam == null) {
                txtTienThua.setText("");
                return;
            }
            Double tienDua = Double.parseDouble(txtTienKHDua.getText());
            Double tongTien = Double.parseDouble(lblTongTienSauGiam.getText());

            if (tienDua >= tongTien) {
                tienThua = tienDua - tongTien;
                lblTienThua.setText("Tiền thừa: ");
                txtTienThua.setText(String.valueOf(tienThua));
            } else {
                tienThua = tongTien - tienDua;
                lblTienThua.setText("Tiền thiếu: ");
                txtTienThua.setText(String.valueOf(tienThua));
            }
        } else {
            Double tienThua;
            if (txtTienKHDua.getText().trim().isEmpty() || txtTienKHDua == null) {
                txtTienThua.setText("");
                return;
            }
            if (lblTongTien.getText().trim().isEmpty() || lblTongTien == null) {
                txtTienThua.setText("");
                return;
            }
            Double tienDua = Double.parseDouble(txtTienKHDua.getText());
            Double tongTien = Double.parseDouble(lblTongTien.getText());

            if (tienDua >= tongTien) {
                tienThua = tienDua - tongTien;
                lblTienThua.setText("Tiền thừa: ");
                txtTienThua.setText(String.valueOf(tienThua));
            } else {
                tienThua = tongTien - tienDua;
                lblTienThua.setText("Tiền thiếu: ");
                txtTienThua.setText(String.valueOf(tienThua));
            }
        }

    }

    private void loadTienThua() {
        txtTienKHDua.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                fillTienThua();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                fillTienThua();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                fillTienThua();
            }
        });
    }

    void fillTienGiam() {
        if (!txtMaVoucher.getText().isEmpty()) {
            // Giả sử lstVc là danh sách các voucher có sẵn
            List<Voucher> lstVc = vcsv.getAllVoucher(); // Lấy tất cả các voucher từ dịch vụ
            for (Voucher voucher : lstVc) {

                if (txtMaVoucher.getText().equalsIgnoreCase(voucher.getMaVoucher())) {
                    double tongTien = Double.parseDouble(lblTongTien.getText());
                    double giaTriVoucher = voucher.getGiaTri();
                    double tienGiam;
                    if (voucher.getKieuGiam()) { // Giảm theo phần trăm
                        tienGiam = tongTien * (giaTriVoucher / 100);
                    } else { // Giảm theo số tiền cố định
                        tienGiam = giaTriVoucher;

                    }
                    lblThongTinGiam.setText(voucher.getKieuGiam() == true ? voucher.getGiaTri() + " %"
                            : voucher.getGiaTri() + " VND");

                    double tongTienSauGiam = tongTien - tienGiam;
                    lblTongTienSauGiam.setText(String.valueOf(tongTienSauGiam));
                    checkVoucher = 1;
                    return; // Thoát khỏi vòng lặp khi tìm thấy voucher hợp lệ
                }
            }
            checkVoucher = 2;
            // Nếu không tìm thấy voucher hợp lệ, không áp dụng giảm giá
            lblTongTienSauGiam.setText("Voucher không hợp lệ!");
            lblThongTinGiam.setText("Voucher không hợp lệ!");
        } else {
            checkVoucher = 2;
            // Nếu không có mã voucher, không áp dụng giảm giá
            lblTongTienSauGiam.setText("Voucher trống!");
            lblThongTinGiam.setText("Voucher trống!");

        }
    }

    void loadTienGiam() {
        txtMaVoucher.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                fillTienGiam();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                fillTienGiam();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                fillTienGiam();
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnHuyHoaDon;
    private javax.swing.JButton btnTaoHoaDon;
    private javax.swing.JButton btnThanhToan;
    private javax.swing.JComboBox<String> cbbHttt;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JLabel lblTenKh;
    private javax.swing.JLabel lblThongTinGiam;
    private javax.swing.JLabel lblTienThua;
    private javax.swing.JLabel lblTongTien;
    private javax.swing.JLabel lblTongTienSauGiam;
    private javax.swing.JButton suaSoLuongSp;
    private javax.swing.JTable tblGioHang;
    private javax.swing.JTable tblHoaDonTao;
    private javax.swing.JTable tblSanPham;
    private javax.swing.JTextField txtMaVoucher;
    private javax.swing.JTextField txtSdtKh;
    private javax.swing.JTextField txtTienKHDua;
    private javax.swing.JLabel txtTienThua;
    private javax.swing.JButton xoaSP;
    // End of variables declaration//GEN-END:variables
}
